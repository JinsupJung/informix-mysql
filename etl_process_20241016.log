2024-10-16 13:37:02,735 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 13:37:02,735 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:02,994 - INFO - Connected to Informix.
2024-10-16 13:37:02,994 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:02,999 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:02,999 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 13:37:03,000 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,006 - INFO - Connected to Informix.
2024-10-16 13:37:03,006 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,007 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,007 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 13:37:03,007 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,014 - INFO - Connected to Informix.
2024-10-16 13:37:03,014 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,015 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,015 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 13:37:03,015 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,024 - INFO - Connected to Informix.
2024-10-16 13:37:03,024 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,025 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,025 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 13:37:03,025 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,031 - INFO - Connected to Informix.
2024-10-16 13:37:03,032 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,032 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,032 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 13:37:03,032 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,042 - INFO - Connected to Informix.
2024-10-16 13:37:03,042 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,043 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,043 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 13:37:03,043 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,049 - INFO - Connected to Informix.
2024-10-16 13:37:03,049 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,050 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,050 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 13:37:03,050 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,058 - INFO - Connected to Informix.
2024-10-16 13:37:03,058 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,059 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,059 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 13:37:03,059 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,065 - INFO - Connected to Informix.
2024-10-16 13:37:03,065 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,066 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:37:03,066 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 13:37:03,066 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:37:03,076 - INFO - Connected to Informix.
2024-10-16 13:37:03,076 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:37:03,077 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:13,754 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 13:47:13,754 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,015 - INFO - Connected to Informix.
2024-10-16 13:47:14,015 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,021 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,021 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 13:47:14,021 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,028 - INFO - Connected to Informix.
2024-10-16 13:47:14,028 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,029 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,029 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 13:47:14,029 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,035 - INFO - Connected to Informix.
2024-10-16 13:47:14,035 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,036 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,036 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 13:47:14,036 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,045 - INFO - Connected to Informix.
2024-10-16 13:47:14,045 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,046 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,046 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 13:47:14,046 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,053 - INFO - Connected to Informix.
2024-10-16 13:47:14,053 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,054 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,054 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 13:47:14,054 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,063 - INFO - Connected to Informix.
2024-10-16 13:47:14,063 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,064 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,064 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 13:47:14,064 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,071 - INFO - Connected to Informix.
2024-10-16 13:47:14,071 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,072 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,072 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 13:47:14,072 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,080 - INFO - Connected to Informix.
2024-10-16 13:47:14,080 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,081 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,082 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 13:47:14,082 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,088 - INFO - Connected to Informix.
2024-10-16 13:47:14,088 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,089 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 13:47:14,089 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 13:47:14,089 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 13:47:14,098 - INFO - Connected to Informix.
2024-10-16 13:47:14,098 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 13:47:14,099 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:23,784 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 14:00:23,784 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,074 - INFO - Connected to Informix.
2024-10-16 14:00:24,074 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,080 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,080 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 14:00:24,080 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,087 - INFO - Connected to Informix.
2024-10-16 14:00:24,087 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,089 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,089 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 14:00:24,089 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,095 - INFO - Connected to Informix.
2024-10-16 14:00:24,095 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,096 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,096 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 14:00:24,096 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,105 - INFO - Connected to Informix.
2024-10-16 14:00:24,105 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,106 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,106 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 14:00:24,106 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,112 - INFO - Connected to Informix.
2024-10-16 14:00:24,112 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,113 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,113 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 14:00:24,113 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,122 - INFO - Connected to Informix.
2024-10-16 14:00:24,122 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,123 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,123 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 14:00:24,123 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,129 - INFO - Connected to Informix.
2024-10-16 14:00:24,129 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,130 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,130 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 14:00:24,130 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,139 - INFO - Connected to Informix.
2024-10-16 14:00:24,139 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,140 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,140 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 14:00:24,140 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,146 - INFO - Connected to Informix.
2024-10-16 14:00:24,146 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,147 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:00:24,147 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 14:00:24,147 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:00:24,156 - INFO - Connected to Informix.
2024-10-16 14:00:24,156 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:00:24,157 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,124 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 14:10:12,124 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,405 - INFO - Connected to Informix.
2024-10-16 14:10:12,405 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,411 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,411 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 14:10:12,411 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,418 - INFO - Connected to Informix.
2024-10-16 14:10:12,418 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,419 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,419 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 14:10:12,419 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,428 - INFO - Connected to Informix.
2024-10-16 14:10:12,428 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,429 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,429 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 14:10:12,429 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,436 - INFO - Connected to Informix.
2024-10-16 14:10:12,436 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,437 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,437 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 14:10:12,437 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,446 - INFO - Connected to Informix.
2024-10-16 14:10:12,446 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,446 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,447 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 14:10:12,447 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,453 - INFO - Connected to Informix.
2024-10-16 14:10:12,453 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,454 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,454 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 14:10:12,454 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,463 - INFO - Connected to Informix.
2024-10-16 14:10:12,463 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,464 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,464 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 14:10:12,464 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,470 - INFO - Connected to Informix.
2024-10-16 14:10:12,470 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,471 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,471 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 14:10:12,471 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,480 - INFO - Connected to Informix.
2024-10-16 14:10:12,481 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,481 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:10:12,481 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 14:10:12,481 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:10:12,487 - INFO - Connected to Informix.
2024-10-16 14:10:12,487 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:10:12,488 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,044 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 14:11:22,045 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,305 - INFO - Connected to Informix.
2024-10-16 14:11:22,305 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,310 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,310 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 14:11:22,310 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,317 - INFO - Connected to Informix.
2024-10-16 14:11:22,317 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,318 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,318 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 14:11:22,318 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,324 - INFO - Connected to Informix.
2024-10-16 14:11:22,324 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,325 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,325 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 14:11:22,325 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,335 - INFO - Connected to Informix.
2024-10-16 14:11:22,335 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,336 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,336 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 14:11:22,336 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,343 - INFO - Connected to Informix.
2024-10-16 14:11:22,343 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,344 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,344 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 14:11:22,344 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,354 - INFO - Connected to Informix.
2024-10-16 14:11:22,354 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,355 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,355 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 14:11:22,355 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,361 - INFO - Connected to Informix.
2024-10-16 14:11:22,361 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,362 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,362 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 14:11:22,362 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,371 - INFO - Connected to Informix.
2024-10-16 14:11:22,371 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,372 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,372 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 14:11:22,372 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,378 - INFO - Connected to Informix.
2024-10-16 14:11:22,378 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,379 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:11:22,379 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 14:11:22,379 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:11:22,387 - INFO - Connected to Informix.
2024-10-16 14:11:22,388 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:11:22,388 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,350 - INFO - Starting ETL process for date range: 20240101 to 20240131. 2024-01
2024-10-16 14:15:36,350 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,629 - INFO - Connected to Informix.
2024-10-16 14:15:36,634 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,634 - INFO - Starting ETL process for date range: 20240201 to 20240229. 2024-02
2024-10-16 14:15:36,634 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,642 - INFO - Connected to Informix.
2024-10-16 14:15:36,643 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,643 - INFO - Starting ETL process for date range: 20240301 to 20240331. 2024-03
2024-10-16 14:15:36,643 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,651 - INFO - Connected to Informix.
2024-10-16 14:15:36,652 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,652 - INFO - Starting ETL process for date range: 20240401 to 20240430. 2024-04
2024-10-16 14:15:36,652 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,658 - INFO - Connected to Informix.
2024-10-16 14:15:36,659 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,659 - INFO - Starting ETL process for date range: 20240501 to 20240531. 2024-05
2024-10-16 14:15:36,659 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,668 - INFO - Connected to Informix.
2024-10-16 14:15:36,669 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,669 - INFO - Starting ETL process for date range: 20240601 to 20240630. 2024-06
2024-10-16 14:15:36,669 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,675 - INFO - Connected to Informix.
2024-10-16 14:15:36,676 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,676 - INFO - Starting ETL process for date range: 20240701 to 20240731. 2024-07
2024-10-16 14:15:36,676 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,685 - INFO - Connected to Informix.
2024-10-16 14:15:36,686 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,686 - INFO - Starting ETL process for date range: 20240801 to 20240831. 2024-08
2024-10-16 14:15:36,686 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,692 - INFO - Connected to Informix.
2024-10-16 14:15:36,693 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,693 - INFO - Starting ETL process for date range: 20240901 to 20240930. 2024-09
2024-10-16 14:15:36,693 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,702 - INFO - Connected to Informix.
2024-10-16 14:15:36,703 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:15:36,703 - INFO - Starting ETL process for date range: 20241001 to 20241031. 2024-10
2024-10-16 14:15:36,703 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:15:36,709 - INFO - Connected to Informix.
2024-10-16 14:15:36,711 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,498 - INFO - Starting ETL process for date range: 20240101 to 20240131. 2024-01
2024-10-16 14:18:57,498 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,751 - INFO - Connected to Informix.
2024-10-16 14:18:57,756 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,756 - INFO - Starting ETL process for date range: 20240201 to 20240229. 2024-02
2024-10-16 14:18:57,756 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,763 - INFO - Connected to Informix.
2024-10-16 14:18:57,764 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,764 - INFO - Starting ETL process for date range: 20240301 to 20240331. 2024-03
2024-10-16 14:18:57,764 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,770 - INFO - Connected to Informix.
2024-10-16 14:18:57,771 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,771 - INFO - Starting ETL process for date range: 20240401 to 20240430. 2024-04
2024-10-16 14:18:57,771 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,780 - INFO - Connected to Informix.
2024-10-16 14:18:57,781 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,781 - INFO - Starting ETL process for date range: 20240501 to 20240531. 2024-05
2024-10-16 14:18:57,781 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,788 - INFO - Connected to Informix.
2024-10-16 14:18:57,788 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,788 - INFO - Starting ETL process for date range: 20240601 to 20240630. 2024-06
2024-10-16 14:18:57,789 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,798 - INFO - Connected to Informix.
2024-10-16 14:18:57,799 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,799 - INFO - Starting ETL process for date range: 20240701 to 20240731. 2024-07
2024-10-16 14:18:57,799 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,805 - INFO - Connected to Informix.
2024-10-16 14:18:57,806 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,807 - INFO - Starting ETL process for date range: 20240801 to 20240831. 2024-08
2024-10-16 14:18:57,807 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,815 - INFO - Connected to Informix.
2024-10-16 14:18:57,816 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,817 - INFO - Starting ETL process for date range: 20240901 to 20240930. 2024-09
2024-10-16 14:18:57,817 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,822 - INFO - Connected to Informix.
2024-10-16 14:18:57,823 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:18:57,823 - INFO - Starting ETL process for date range: 20241001 to 20241031. 2024-10
2024-10-16 14:18:57,823 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:18:57,833 - INFO - Connected to Informix.
2024-10-16 14:18:57,834 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,245 - INFO - Starting ETL process for date range: 20240101 to 20240131. 2024-01
2024-10-16 14:25:37,245 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,525 - INFO - Connected to Informix.
2024-10-16 14:25:37,531 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,531 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,531 - INFO - Starting ETL process for date range: 20240201 to 20240229. 2024-02
2024-10-16 14:25:37,531 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,538 - INFO - Connected to Informix.
2024-10-16 14:25:37,539 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,539 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,539 - INFO - Starting ETL process for date range: 20240301 to 20240331. 2024-03
2024-10-16 14:25:37,539 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,545 - INFO - Connected to Informix.
2024-10-16 14:25:37,546 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,546 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,546 - INFO - Starting ETL process for date range: 20240401 to 20240430. 2024-04
2024-10-16 14:25:37,546 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,556 - INFO - Connected to Informix.
2024-10-16 14:25:37,557 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,557 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,557 - INFO - Starting ETL process for date range: 20240501 to 20240531. 2024-05
2024-10-16 14:25:37,557 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,563 - INFO - Connected to Informix.
2024-10-16 14:25:37,564 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,564 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,564 - INFO - Starting ETL process for date range: 20240601 to 20240630. 2024-06
2024-10-16 14:25:37,564 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,573 - INFO - Connected to Informix.
2024-10-16 14:25:37,574 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,574 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,574 - INFO - Starting ETL process for date range: 20240701 to 20240731. 2024-07
2024-10-16 14:25:37,574 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,581 - INFO - Connected to Informix.
2024-10-16 14:25:37,581 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,581 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,582 - INFO - Starting ETL process for date range: 20240801 to 20240831. 2024-08
2024-10-16 14:25:37,582 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,591 - INFO - Connected to Informix.
2024-10-16 14:25:37,591 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,592 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,592 - INFO - Starting ETL process for date range: 20240901 to 20240930. 2024-09
2024-10-16 14:25:37,592 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,597 - INFO - Connected to Informix.
2024-10-16 14:25:37,598 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,598 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,598 - INFO - Starting ETL process for date range: 20241001 to 20241031. 2024-10
2024-10-16 14:25:37,598 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:25:37,608 - INFO - Connected to Informix.
2024-10-16 14:25:37,609 - ERROR - Failed to execute query on Informix: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:25:37,609 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,097 - INFO - Starting ETL process for date range: 20240101 to 20240131.
2024-10-16 14:52:37,097 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,354 - INFO - Connected to Informix.
2024-10-16 14:52:37,354 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240101'
                                    AND A.OUT_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240101'
                                    AND A.RET_DATE <= '20240131'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,360 - ERROR - ETL process failed for date range 20240101 to 20240131: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,360 - INFO - Starting ETL process for date range: 20240201 to 20240229.
2024-10-16 14:52:37,360 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,366 - INFO - Connected to Informix.
2024-10-16 14:52:37,367 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240201'
                                    AND A.OUT_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240201'
                                    AND A.RET_DATE <= '20240229'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,367 - ERROR - ETL process failed for date range 20240201 to 20240229: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,367 - INFO - Starting ETL process for date range: 20240301 to 20240331.
2024-10-16 14:52:37,368 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,376 - INFO - Connected to Informix.
2024-10-16 14:52:37,376 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240301'
                                    AND A.OUT_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240301'
                                    AND A.RET_DATE <= '20240331'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,377 - ERROR - ETL process failed for date range 20240301 to 20240331: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,377 - INFO - Starting ETL process for date range: 20240401 to 20240430.
2024-10-16 14:52:37,377 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,384 - INFO - Connected to Informix.
2024-10-16 14:52:37,384 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240401'
                                    AND A.OUT_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240401'
                                    AND A.RET_DATE <= '20240430'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,385 - ERROR - ETL process failed for date range 20240401 to 20240430: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,385 - INFO - Starting ETL process for date range: 20240501 to 20240531.
2024-10-16 14:52:37,385 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,393 - INFO - Connected to Informix.
2024-10-16 14:52:37,393 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240501'
                                    AND A.OUT_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240501'
                                    AND A.RET_DATE <= '20240531'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,394 - ERROR - ETL process failed for date range 20240501 to 20240531: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,394 - INFO - Starting ETL process for date range: 20240601 to 20240630.
2024-10-16 14:52:37,394 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,401 - INFO - Connected to Informix.
2024-10-16 14:52:37,401 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240601'
                                    AND A.OUT_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240601'
                                    AND A.RET_DATE <= '20240630'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,402 - ERROR - ETL process failed for date range 20240601 to 20240630: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,402 - INFO - Starting ETL process for date range: 20240701 to 20240731.
2024-10-16 14:52:37,402 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,411 - INFO - Connected to Informix.
2024-10-16 14:52:37,411 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240701'
                                    AND A.OUT_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240701'
                                    AND A.RET_DATE <= '20240731'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,411 - ERROR - ETL process failed for date range 20240701 to 20240731: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,411 - INFO - Starting ETL process for date range: 20240801 to 20240831.
2024-10-16 14:52:37,412 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,417 - INFO - Connected to Informix.
2024-10-16 14:52:37,417 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240801'
                                    AND A.OUT_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240801'
                                    AND A.RET_DATE <= '20240831'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,418 - ERROR - ETL process failed for date range 20240801 to 20240831: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,418 - INFO - Starting ETL process for date range: 20240901 to 20240930.
2024-10-16 14:52:37,418 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,428 - INFO - Connected to Informix.
2024-10-16 14:52:37,428 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20240901'
                                    AND A.OUT_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20240901'
                                    AND A.RET_DATE <= '20240930'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,429 - ERROR - ETL process failed for date range 20240901 to 20240930: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
2024-10-16 14:52:37,429 - INFO - Starting ETL process for date range: 20241001 to 20241031.
2024-10-16 14:52:37,429 - INFO - Connecting to Informix at 175.196.7.17:1526
2024-10-16 14:52:37,435 - INFO - Connected to Informix.
2024-10-16 14:52:37,435 - INFO - Executing query: 
        SELECT 
            A.ITEM_NO,
            B.FULL_NAME,
            B.UNIT,
            B.STANDARD,
            O_QTY,
            O_AMT,
            P_AMT,
            S_PROFIT,
            CASE O_AMT WHEN 0 THEN 1 ELSE O_AMT END AS ADJ_O_AMT,
            B.COMMODITY_TYPE,
            CASE 
                WHEN B.COMMODITY_TYPE = '1' THEN '본사상품'
                WHEN B.COMMODITY_TYPE = '2' THEN '본사제품'
                WHEN B.COMMODITY_TYPE = '3' THEN '음성공장상품'
                WHEN B.COMMODITY_TYPE = '4' THEN '음성공장제품'
                ELSE '기타'
            END AS COMMODITY_TYPE_NAME,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE O_AMT / O_QTY 
            END AS SALES_UNIT_PRICE,
            CASE 
                WHEN O_QTY = 0 THEN 0
                ELSE P_AMT / O_QTY 
            END AS UNIT_COST_PRICE
        FROM 
            (SELECT 
                       A.ITEM_NO,
                       SUM(OUT_QTY) - SUM(RET_QTY) AS O_QTY,
                       SUM(OUT_AMT) - SUM(RET_AMT) AS O_AMT,
                       SUM(PRIME_AMT) - SUM(RPRIME_AMT) AS P_AMT,
                       SUM(OUT_AMT) - SUM(RET_AMT) - SUM(PRIME_AMT) + SUM(RPRIME_AMT) AS S_PROFIT
                   FROM 
                       (
                               SELECT 
                                      A.ITEM_NO,
                                      SUM(A.OUT_QTY) AS OUT_QTY,
                                      0 AS RET_QTY,
                                      SUM(A.SUB_AMT) AS OUT_AMT,
                                      0 AS RET_AMT,
                                      SUM(A.P_COST) AS PRIME_AMT,
                                      0 AS RPRIME_AMT
                                  FROM 
                                      T_DO_DELIVERY_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CUSTOMER
                                  INNER JOIN CM_CHAIN AS C ON A.CUSTOMER = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.OUT_GUBUN = '1'
                                    AND A.OUT_DATE >= '20241001'
                                    AND A.OUT_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO    
                                  UNION ALL 
                                  SELECT 
                                      A.ITEM_NO,
                                      0,
                                      SUM(A.RET_QTY) AS RET_QTY,
                                      0,
                                      SUM(A.SUB_AMT) AS SUB_AMT,
                                      0,
                                      SUM(A.P_COST) AS P_COST
                                  FROM 
                                      T_DO_OUT_RETURN_LINE AS A
                                  INNER JOIN CM_CHAIN AS D ON D.CHAIN_NO = A.CHAIN
                                  INNER JOIN CM_CHAIN AS C ON A.CHAIN = C.CHAIN_NO AND C.CHAIN_TYPE IN ('3', '4', '9')
                                  WHERE 
                                      A.RET_NO <> ''
                                    AND A.RET_DATE >= '20241001'
                                    AND A.RET_DATE <= '20241031'
                                    AND A.ITEM_TYPE = '1'
                                  GROUP BY 
                                      A.ITEM_NO
                       ) AS A
                   GROUP BY 
                       A.ITEM_NO
            ) AS A
        LEFT JOIN CM_ITEM_MASTER AS B ON B.ITEM_NO = A.ITEM_NO  
        WHERE 
            A.ITEM_NO <> ''
        
2024-10-16 14:52:37,436 - ERROR - ETL process failed for date range 20241001 to 20241031: java.sql.SQLException: Code-set conversion function failed due to illegal sequence or invalid value.
